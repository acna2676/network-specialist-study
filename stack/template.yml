AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    Default: network-specialist-study
    ConstraintDescription: Can contain onluy ASCII characters
  SSHLocation:
    Description: IP address range that con be userd to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x
  DBMasterUserName:
    Type: String
    Default: root
  DBMasterUserPassword:
    Type: String
    Default: password
  EngineVersion:
    Type: String
    Default: 8.0
  HostedZoneName:
    Type: String
    Default: sample.com
  HostName:
    Type: String
    Default: www.sample.com
Mappings:
  AzMap:
    AZ1:
      AZ: ap-northeast-1a
    AZ2:
      AZ: ap-northeast-1c
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: network-specialist-study
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !FindInMap [AzMap, AZ1, AZ]
      Tags:
        - Key: Name
          Value: network-specialist-study
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: network-specialist-study
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: network-specialist-study
  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable
  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      InstanceId: !Ref EC2Instance
      Tags:
        - Key: Name
          Value: network-specialist-study
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 8001
          ToPort: 8001
          CidrIp: 126.75.109.221/32	
      Tags:
        - Key: Name
          Value: network-specialist-study
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: AttachGateway
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-08a8688fb7eacb171"
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - GroupSet:
          - !Ref InstanceSecurityGroup
          DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId: !Ref PublicSubnet1
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum update
          sudo yum install bind
          sudo yum install postfix
Outputs:
  InstanceSecurityGroupId:
    Value: !Ref InstanceSecurityGroup
    Export:
      Name: InstanceSecurityGroupId
  ElasticIP:
    Value: !Ref ElasticIP
    Export:
      Name: ElasticIP
